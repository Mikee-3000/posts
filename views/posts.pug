extends layout

block content
    div(class='content')
        div(class='margin-left')
        div(class='center')
            div(class='top')
                h1=title
                if userIsAdmin
                    a(href='/logs') Logs
                a(id='logoutLink') Logout
            #message 
                if message
                    =message
            div#postList
                each post in posts
                    div(class='post', id=post.id)
                        div(id=post.username)
                            br
                            div(class='postHeader')
                                span(id=post.id+'selected')
                                span#username= post.posted_by
                                span#date= post.time_posted
                                span#link
                                    a(onclick='copyPostLink("' + post.id + '")') Copy link 📋
                            br
                            div(class='postBody')
                                div(class='postText')
                                    label(id=post.id+'text')= post.post_text
                                if userIsAdmin
                                    div(class='deleteButton')
                                        button(id='deleteButton' + post.id) Delete
                                        script.
                                            document.getElementById('deleteButton' + #{post.id}).addEventListener("click", function() {
                                                const url = '/api/posts/' + #{post.id};
                                                fetch(url, {
                                                    method: 'DELETE',
                                                })
                                                .then(response => {
                                                    if (!response.ok) {
                                                        throw new Error('HTTP error ' + response.status);
                                                    }
                                                }).then(() => {
                                                    //- clear the textarea and reload the page
                                                    location.reload();
                                                })
                                                .catch((error) => {
                                                    console.error('Error:', error);
                                                });
                                            });
                    br
            div#postFormDiv
            form(id='postForm')
                    textarea(id='postText', class='postTA' placeholder='Write your post here...')
                    input(type='hidden' name='csrfToken' value=csrfToken id='csrfToken')
                    br
                    button(id='postButton', type='submit') Post
        div(class='margin-right')
    script.
        //- post a new post
        document.getElementById("postForm").addEventListener("submit", function(event) {
            event.preventDefault();
            var postText = document.getElementById("postText").value;
            var postedBy = "#{username}";
            var csrfToken = document.getElementById("csrfToken").value;
            fetch('/api/posts/new', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    post_text: postText,
                    time_posted: new Date().toISOString(),
                    posted_by: postedBy,
                    csrfToken: csrfToken
                }),
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('HTTP error ' + response.status);
                }
            })
            .then(() => {
                //- clear the textarea and reload the page
                document.getElementById('postText').value = "";
                location.reload();
            })
            .catch((error) => {
                console.error('Error:', error);
            });
        });
        function checkForSelected(postId) {
            var selectedPost = window.location.hash.substring(1);
            if (selectedPost == postId) {
                this.innerText = '👆';
            }
        }
        function copyPostLink(pid) {
            //- copy to clipboard https://www.w3schools.com/howto/howto_js_copy_clipboard.asp
            var copyText = document.URL + '#' + pid;
            navigator.clipboard.writeText(copyText);
        } 
    //- logout
    script(src="/javascripts/logout.js")
    script.
        function addEventListenerToSelectedPost(selectedPost) {
            //- a custom function to add an event listener to the selected post, so that it can be notified on hashchange
            //- https://www.geeksforgeeks.org/javascript-custom-events/
            var selectionEvent = new CustomEvent('selectionEvent', {
                detail: { message: selectedPost }
            });
            var messageDiv = document.getElementById('message');
            //- clear the message if there's any
            messageDiv.innerText = '';  
            var span = document.getElementById(selectedPost+'selected');
            //- this can be null, in which case warning is to be shown
            if (span === null) {
                //- insecure
                let decSelectedPost = decodeURIComponent(selectedPost)
                messageDiv.innerText = '❗ post not found: #' + decSelectedPost
            } else {
                span.addEventListener('selectionEvent', function (e) {
                    this.innerText = '👉 post #' + e.detail.message
                }, false);
                span.dispatchEvent(selectionEvent);
            }
        }
        window.onload = function() {
            //- get the selected post id from the url
            //- https://developer.mozilla.org/en-US/docs/Web/API/Location/hash
            var selectedPost = window.location.hash.substring(1);
            //- only run if the selected post is a number
            if (selectedPost && /^\d+$/.test(selectedPost)) {
                //- I couldn't get documentFindById to work (the dom is already loaded), so I'm using a custom event instead
                addEventListenerToSelectedPost(selectedPost);
            } else {
                //- scroll to bottom of post list
                //- https://stackoverflow.com/questions/270612/scroll-to-bottom-of-div
                var div = document.getElementById('postList');
                div.scrollTop = div.scrollHeight;
            }
        };
        https://developer.mozilla.org/en-US/docs/Web/API/HashChangeEvent/newURL//- 
        window.addEventListener("hashchange", (event) => {
            var selectedPost = window.location.hash.substring(1);
            if (selectedPost && /^\d+$/.test(selectedPost)) {
                addEventListenerToSelectedPost(selectedPost);
            }
        });